/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'oliver' at '15/11/15 12:26 PM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 1.7
version = '1.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven { 
    	url 'https://raw.github.com/slok/algs4-mvn-repo/master'
    	url "http://dl.bintray.com/olivercoleman/maven"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile "com.beust:jcommander:1.48"
    compile "com.thoughtworks.xstream:xstream:1.4.8"
    compile "com.eclipsesource.minimal-json:minimal-json:0.9.4"
    compile 'com.google.guava:guava:19.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.reflections:reflections:0.9.10'
    compile 'com.googlecode.princeton-java-algorithms:algorithms:4.0.1'
    compile 'org.apache.commons:commons-csv:1.2'
    compile(group: 'org.ojcoleman.bain', name: 'bain', version: '1.0.4', ext: 'jar')
    
    // aparapi not available in any repo.
    compile fileTree(dir: 'lib', include: 'aparapi.jar')

    
    testCompile 'org.testng:testng:6.9.9'
}

test.useTestNG()


jar {
  manifest { 
    attributes "Main-Class": "com.ojcoleman.europa.Main"
  }  
}

// Assemble task that includes all dependencies (makes a "fat" jar")
task withDeps(type: Jar) {
	manifest.from jar.manifest
	baseName = project.name + '-all'
	from {
	    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
	}
	with jar
}
